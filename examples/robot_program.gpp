symbol domain room = {kitchen, bedroom, livingroom}
symbol domain object = {book, cup, toy}

room fluent object_location(object x) {
initially:
    (book) = livingroom;
    (cup) = kitchen;
    (toy) = bedroom;
}

bool fluent robot_in(room r) {
initially:
    (kitchen) = true;
    (bedroom) = false;
    (livingroom) = false;
}

action move_to(room target) {
precondition:
    !robot_in(target) // Can't move to the current room

effect:
    robot_in(kitchen) = (kitchen == target);
    robot_in(bedroom) = (bedroom == target);
    robot_in(livingroom) = (livingroom == target);
}

action grab(object obj, room r) {
precondition:
    robot_in(r) & 
    object_location(obj) == r

effect:
    object_location(obj) = null;
}

action put_down(object obj, room r) {
precondition:
    robot_in(r) &
    object_location(obj) == null

effect:
    object_location(obj) = r;
}

bool function goal() = 
    object_location(book) == bedroom &
    object_location(cup) == livingroom &
    object_location(toy) == kitchen

procedure main() {
    while (!goal()) {
        pick (object obj in {book, cup, toy})
            pick (room r in {kitchen, bedroom, livingroom}) {
                move_to(r);
                grab(obj, r);
                pick (room dest in {kitchen, bedroom, livingroom}) {
                    move_to(dest);
                    put_down(obj, dest);
                }
            }
    }
}